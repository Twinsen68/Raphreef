text_sensor: 
  # raphsreef Version
  - platform: template
    name: "raphsreef Version"
    id: raphsreef_version
    icon: mdi:update
    update_interval: '365days'
    lambda: |-
      return {"${app_version}"};
    entity_category: "diagnostic"

  # GitHub Project URL
  - platform: template
    name: GitHub
    id: github
    icon: mdi:github
    update_interval: '365days'
    lambda: |-
      return {"github.com/twinsen68/raphreef"};
    entity_category: "diagnostic"

  # Déclaration d'un capteur textuel pour afficher l'heure actuelle synchronisée via SNTP
  - platform: template
    name: "Heure actuelle"  # Nom visible dans Home Assistant pour ce capteur
    lambda: |-
      // Vérifie si l'instance SNTP a une heure valide synchronisée
      if (id(sntp_time).now().is_valid()) {
        // Si oui, retourne l'heure actuelle au format HH:MM:SS (heure:minute:seconde)
        return id(sntp_time).now().strftime("%H:%M:%S");
      } else {
        // Si non, indique que l'heure n'est pas synchronisée
        return {"Non synchronisé"};
      }
    icon: mdi:clock  # Icône représentant une horloge, utilisée pour un affichage clair dans Home Assistant

time:
  # Synchronisation horaire pour la gestion des cycles 24h
  - platform: sntp
    id: sntp_time

sensor:
  - platform: wifi_signal
    name: "Signal Wi-Fi (dB)"  # Force du signal en dB
    id: wifi_signal_db
    update_interval: 60s  # Mettre à jour chaque minute
    icon: mdi:wifi
    unit_of_measurement: "dB"

binary_sensor:
  - platform: status  # Suivi de l'état général du périphérique ESPHome
    name: "Statut ESPHome"  # Nom affiché dans l'interface utilisateur

  - platform: template
    name: "Statut Wi-Fi"
    id: wifi_status
    lambda: |-
      if (id(wifi_signal_db).state > -80) {
        return true;  // Bon signal
      } else {
        return false;  // Signal faible ou déconnecté
      }
    device_class: connectivity

automation:
  # Notification lorsque le Wi-Fi est perdu
  - alias: "Wi-Fi déconnecté"
    trigger:
      - platform: wifi
        signal_strength: below
        threshold: -80  # Limite pour un mauvais signal
    action:
      - logger.log: "Attention ! Signal Wi-Fi faible ou déconnecté."
      - text_sensor.template.publish:
          id: wifi_status_text
          state: "Déconnecté"

  # Notification lorsque le Wi-Fi revient
  - alias: "Wi-Fi reconnecté"
    trigger:
      - platform: wifi
        signal_strength: above
        threshold: -80  # Retour d'un bon signal
    action:
      - logger.log: "Wi-Fi reconnecté avec succès."
      - text_sensor.template.publish:
          id: wifi_status_text
          state: "Connecté"
